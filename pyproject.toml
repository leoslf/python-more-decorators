[tool.poetry]
name = "more-decorators"
version = "0.1.1"
description = "Python decorators library"
authors = ["Leo Sin <leo.sin@my.cityu.edu.hk>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
sphinx = { version = "^7.2.6", optional = true }
sphinx-rtd-theme = { version = "^2.0.0", optional = true }
myst-parser = { version = "^2.0.0", optional = true }
sphinx-pyproject = { version = "^0.3.0", optional = true }
sphinxcontrib-apidoc = { version = "^0.5.0", optional = true }
sphinx-autoapi = { version = "^3.0.0", optional = true }

[tool.poetry.extras]
docs = ["sphinx", "sphinx-rtd-theme", "myst-parser", "sphinx-pyproject", "sphinxcontrib-apidoc", "sphinx-autoapi"]

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
pytest-cov = ">=4.1,<6.0"
pytest-mock = "^3.12.0"
freezegun = "^1.4.0"
ruff = "^0.3.2"
mypy = "^1.9.0"
junitparser = "^3.1.2"

[tool.poetry.group.release.dependencies]
python-semantic-release = "^9.1.1"

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"

[tool.sphinx-pyproject]
extensions = [
    "myst_parser",
    "sphinx.ext.autodoc",
    "autoapi.extension",
    "sphinx.ext.napoleon",
    "sphinx.ext.doctest",
    "sphinx.ext.intersphinx",
    "sphinx.ext.graphviz",
    "sphinx.ext.inheritance_diagram",
    "sphinx.ext.mathjax",
    "sphinx.ext.todo",
    "sphinx.ext.viewcode",
]
html_theme = "sphinx_rtd_theme"
add_function_parentheses = false
add_module_names = false
autoapi_generate_api_docs = true
autoapi_ignore = ["tests", "conf"]

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
branch = "main"
upload_to_PyPI = true
upload_to_release = true
build_command = "poetry build"
commit_author = "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[virtualenvs]
create = true
in-project = true

